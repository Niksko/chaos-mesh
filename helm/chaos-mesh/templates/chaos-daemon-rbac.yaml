{{- if .Values.chaosDaemon.serviceAccount }}
---
kind: ServiceAccount
apiVersion: v1
metadata:
  namespace: {{ .Release.Namespace | quote }}
  name: {{ .Values.chaosDaemon.serviceAccount }}
  labels:
    {{- include "chaos-mesh.labels" . | nindent 4 }}
    app.kubernetes.io/component: chaos-daemon
{{- end}}
{{- if .Values.chaosDaemon.podSecurityPolicy }}
---
# roles
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: {{ .Release.Name }}-chaos-daemon-target-namespace
  namespace: chaos-testing
  labels:
    {{- include "chaos-mesh.labels" . | nindent 4 }}
    app.kubernetes.io/component: chaos-daemon
subjects:
  - kind: ServiceAccount
    name: {{ .Values.chaosDaemon.serviceAccount }}
    # apiGroup: rbac.authorization.k8s.io
    namespace: {{ .Release.Namespace | quote }}
roleRef:
  kind: ClusterRole
  name: {{ .Release.Name }}-chaos-daemon-psp
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: {{ .Release.Name }}-chaos-daemon-psp
  labels:
    {{- include "chaos-mesh.labels" . | nindent 4 }}
    app.kubernetes.io/component: chaos-daemon
rules:
- apiGroups:
  - policy
  - extensions
  resourceNames:
  - {{ .Release.Name }}-chaos-daemon
  resources:
  - podsecuritypolicies
  verbs:
  - use
---
# Restricted DEFAULT policy
# ( Default policy for all new services )
apiVersion: policy/v1beta1
kind: PodSecurityPolicy
metadata:
  name: {{ .Release.Name }}-chaos-daemon
  labels:
    {{- include "chaos-mesh.labels" . | nindent 4 }}
    app.kubernetes.io/component: chaos-daemon
spec:
  {{- if .Values.chaosDaemon.privileged }}
  allowedCapabilities:
    - SYS_PTRACE
  {{- else }}
  allowedCapabilities:
    - SYS_PTRACE
    - NET_ADMIN
    - MKNOD
    - SYS_CHROOT
    - SYS_ADMIN
    - KILL
    # CAP_IPC_LOCK is used to lock memory
    - IPC_LOCK
  {{- end }}
  allowedHostPaths:
    - pathPrefix: {{ .Values.chaosDaemon.socketPath | default "/var/run/docker.sock" }}
      readOnly: false
    - pathPrefix: /sys
      readOnly: false
    {{- if .Values.bpfki.create }}
    - pathPrefix: /etc/localtime
      readOnly: false
    - pathPrefix: /lib/modules
      readOnly: false
    - pathPrefix: /usr/src
      readOnly: false
    {{- end }}
  allowPrivilegeEscalation: true
  {{- if .Values.chaosDaemon.hostNetwork }}
  hostNetwork: true
  {{- end }}
  {{- if .Values.bpfki.create }}
  hostPorts:
  - max: {{ .Values.bpfki.grpcPort }}
    min: {{ .Values.bpfki.grpcPort }}
  {{- end }}
  hostIPC: true
  hostPID: true
  privileged: {{ or (eq .Values.chaosDaemon.privileged true) (eq .Values.bpfki.create true) }}
  seLinux:
    rule: RunAsAny
  supplementalGroups:
    rule: RunAsAny
  runAsUser:
    rule: RunAsAny
  fsGroup:
    rule: RunAsAny
  volumes:
  - configMap
  - downwardAPI
  - emptyDir
  - projected
  - secret
  - hostPath
{{- end }}

